# denite.nvim
[[plugins]]
repo = 'Shougo/denite.nvim'

# vim-toml
[[plugins]]
repo  = 'cespare/vim-toml'

# vim-go
[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
  let g:go_fmt_command = "goimports"
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = 'bash install.sh'
rev = 'next'
hook_add = '''
  set hidden
  let g:LanguageClient_serverCommands = {
      \ 'go': [
         " https://github.com/saibing/bingo
         " go get -u github.com/saibing/bingo
         \ 'bingo', '--mode', 'stdio', '--logfile', '/tmp/lspserver.log'
      \ ]
      \ }
  let g:LanguageClient_loadSettings = 1
  nnoremap <silent> <Leader><Leader> :<C-u>Denite contextMenu<CR>
  nnoremap <silent> K                :<C-u>call LanguageClient_textDocument_hover()<CR>
  nnoremap <silent> <C-]>            :<C-u>call LanguageClient_textDocument_definition()<CR>
  nnoremap <silent> <Leader>i        :<C-u>call LanguageClient_textDocument_implementation()<CR>
  nnoremap <silent> <Leader>R        :<C-u>call LanguageClient_textDocument_rename()<CR>
  nnoremap <silent> <Leader>s        :<C-u>Denite documentSymbol<CR>
  nnoremap <silent> <Leader>dr       :<C-u>Denite references<CR>
  nnoremap <silent> <Leader>a        :<C-u>call LanguageClient_textDocument_codeAction()<CR>
  nnoremap <silent> gq               :<C-u>call LanguageClient_textDocument_formatting()<CR>
  vnoremap <silent> gq               :<C-u>call LanguageClient_textDocument_rangeFormatting()<CR>
  nnoremap <silent> <Leader>h        :<C-u>call LanguageClient_textDocument_documentHighlight()<CR>
  nnoremap <silent> <Leader>H        :<C-u>call LanguageClient_clearDocumentHighlight()<CR>
  nnoremap <silent> <Leader>S        :<C-u>Denite workspaceSymbol<CR>
'''

# The NERDTree
[[plugins]]
repo = 'scrooloose/nerdtree'

# surround.vim
[[plugins]]
repo = 'tpope/vim-surround'
hook_add = '''
nnoremap <silent> <C-e> :NERDTreeToggle<CR>

" 表示幅
let g:NERDTreeWinSize=50

" ブックマークを表示
let g:NERDTreeShowBookmarks=1

" 親ディレクトリへ移動
let g:NERDTreeMapUpdir=''

" ファイルの開き方
let g:NERDTreeMapOpenSplit='<C-j>'
let g:NERDTreeMapOpenVSplit='<C-l>'

" ファイルを開いたらNERDTreeを閉じる
let g:NERDTreeQuitOnOpen=1

" 隠しファイルを表示
let g:NERDTreeShowHidden=1

" 非表示ファイル
let g:NERDTreeIgnore=['\.git$', '\.clean$', '\.swp$', '\.bak$', '\~$']

" NERDTreeを同時に閉じる
autocmd bufenter * if (winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q | endif
'''

# Operator replace
[[plugins]]
repo = 'kana/vim-operator-user'
[[plugins]]
repo = 'kana/vim-operator-replace'
depends = ['vim-operator-user']

# tender
[[plugins]]
repo = 'jacoborus/tender.vim'

# ale
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
" 保存時のみ実行する
let g:ale_lint_on_text_changed = 0
" 表示に関する設定
let g:ale_sign_error = ''
let g:ale_sign_warning = ''
let g:airline#extensions#ale#open_lnum_symbol = '('
let g:airline#extensions#ale#close_lnum_symbol = ')'
let g:ale_echo_msg_format = '[%linter%]%code: %%s'
highlight link ALEErrorSign Tag
highlight link ALEWarningSign StorageClass
" Ctrl + kで次の指摘へ、Ctrl + jで前の指摘へ移動
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

# vim-table-mode
[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

# sonictemplate-vim
[[plugins]]
repo = 'mattn/sonictemplate-vim'

# vim-cheatsheet
[[plugins]]
repo = 'reireias/vim-cheatsheet'
hook_add = '''
let g:cheatsheet#cheat_file = '~/.config/nvim/cheatsheet.md'
'''

# simeji/winresizer
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_start_key = '<C-T>'
'''

# vim-fugitive
[[plugins]]
repo = 'tpope/vim-fugitive'

# vim-airline
[[plugins]]
repo = 'vim-airline/vim-airline'

